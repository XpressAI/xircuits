name: Frontend Playwright Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: "*"

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8","3.9","3.10","3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set Branch Name
      run: |
        echo "branch_name=${GITHUB_HEAD_REF##*/}" >> $GITHUB_ENV               

    - name: Check Branch
      run: echo "$env.branch_name"

    - name: Get Hash
      id: hash
      run: echo "git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

    - name: Check Hash
      run: echo "$env.git_hash"

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Yarn
      run: npm install --global yarn

    - name: Build Extension in Dev Mode
      run: |
        pip install -e .

    - name: Build Wheel
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build &&
        python -m build

    - name: Install Xircuits from wheel
      run: |
        whl_name=$(echo dist/*whl)
        pip install $whl_name

    - name: Install Xircuits Test Component Library
      run: |
        xircuits install tests

    - name: Install xvfb
      run: |
        sudo apt-get install xvfb

    - name: Test E2E
      run: |
        ( ls && jupyter lab --ServerApp.token= --ServerApp.password= --LabApp.default_url=/lab\?reset ) & cd ui-tests && jlpm install && jlpm playwright install && xvfb-run jlpm playwright test e2e/datatype-test.spec.ts

    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-report-${{ matrix.python-version }}
        path: ui-tests/playwright-report/
        retention-days: 1