{"version":3,"file":"lib_index_js.62487f3a88014d89cc82.js","mappings":";;;;;;;;;;;;;;;;;;AAA+B;AACM;AAC9B,aAAa,4DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACO,6BAA6B,4CAAe;AACnD;AACA,gBAAgB,gDAAmB,SAAS;AAC5C;AACA;AACA,aAAa,0BAA0B;AACvC;AACA;;;;;;;;;;;;;;;;;;;;ACpB+B;AACM;AAC9B,aAAa,4DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yBAAyB,4CAAe;AAC/C;AACA,eAAe,gDAAmB;AAClC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfqE;AAClB;AACzB;AACW;AACa;AACR;AACnC,aAAa,4DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACO,gBAAgB,4DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6DAAW;AACpC;AACA,gBAAgB,0DAAmB;AACnC,YAAY,0DAAmB;AAC/B,gBAAgB,0DAAmB,CAAC,mDAAU;AAC9C,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,mCAAmC,kDAAkD;AACxJ,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,yCAAyC,wDAAwD;AACpK,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,yCAAyC,uDAAuD;AACnK,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,4CAA4C,0DAA0D;AACzK,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,8CAA8C,2DAA2D;AAC5K,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,oCAAoC,mDAAmD;AAC1J,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,qCAAqC,kDAAkD;AAC1J,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,wBAAwB,uCAAuC;AAClI,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,sCAAsC,mDAAmD;AAC5J,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,4CAA4C,wDAAwD;AACvK,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,0DAA0D,uEAAuE;AACpM,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,oDAAoD,kEAAkE;AACzL,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,wDAAwD,qEAAqE;AAChM,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,qDAAqD,mEAAmE;AAC3L,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,oCAAoC,gDAAgD;AACvJ,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,iDAAiD,2DAA2D;AAC/K,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,uCAAuC,gDAAgD;AAC1J,oBAAoB,0DAAmB,CAAC,2DAAc,IAAI,SAAS,wCAAwC,iDAAiD;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAS,EAAE,oEAAe;AACzC;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY;AACnD;AACA;AACA,iEAAe,uBAAuB,EAAC","sources":["webpack://xpipe_component_library/./lib/TrayItemWidget.js","webpack://xpipe_component_library/./lib/TrayWidget.js","webpack://xpipe_component_library/./lib/index.js"],"sourcesContent":["import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nexport const Tray = styled.div `\r\n\tcolor: white;\r\n\tfont-family: Helvetica, Arial;\r\n\tpadding: 5px;\r\n\twidth:auto;\r\n\tmargin: 0px 10px;\r\n\tborder: solid 1px ${(p) => p.color};\r\n\tborder-radius: 5px;\r\n\tmargin-bottom: 2px;\r\n\tcursor: pointer;\r\n`;\r\nexport class TrayItemWidget extends React.Component {\r\n    render() {\r\n        return (React.createElement(Tray, { color: this.props.color || \"white\", draggable: true, onDragStart: (event) => {\r\n                event.dataTransfer.setData('storm-diagram-node', JSON.stringify(this.props.model));\r\n                this.forceUpdate();\r\n            }, className: \"tray-item\" }, this.props.name));\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nexport const Tray = styled.div `\r\n\tmin-width: 260px;\r\n\tbackground: rgb(20, 20, 20);\r\n\tflex-grow: 3;\r\n\tflex-shrink: 0;\r\n\twidth:auto;\r\n\tmax-height: auto;\r\n\toverflow-y: auto;\r\n`;\r\nexport class TrayWidget extends React.Component {\r\n    render() {\r\n        return React.createElement(Tray, null, this.props.children);\r\n    }\r\n}\r\n","import { ILabShell, ILayoutRestorer } from '@jupyterlab/application';\r\nimport { ReactWidget } from '@jupyterlab/apputils';\r\nimport React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { TrayItemWidget } from './TrayItemWidget';\r\nimport { TrayWidget } from './TrayWidget';\r\nexport const Body = styled.div `\r\n\t\tflex-grow: 1;\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tmin-height: 100%;\r\n\t\theight: 500px;\r\n\t`;\r\nexport const Content = styled.div `\r\n    display: flex;\r\n    flex-grow: 1;\r\n    flex-wrap: wrap;\r\n    'padding-top': '2em',\r\n    'padding-bottom': '2em',\r\n    'border-top': '1px solid #dfe2e5'\r\n  `;\r\nclass BodyWidget extends ReactWidget {\r\n    render() {\r\n        return (React.createElement(Body, null,\r\n            React.createElement(Content, null,\r\n                React.createElement(TrayWidget, null,\r\n                    React.createElement(TrayItemWidget, { model: { type: 'in', name: 'Read Data Set' }, name: \"Read Data Set\", color: \"rgb(192,255,0)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'out', name: 'Augment Image Data' }, name: \"Argument Image Data\", color: \"rgb(0,102,204)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'split', name: 'Train/Test Split' }, name: \"Train/Test Split\", color: \"rgb(255,153,102)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'train', name: 'Train Face Detector' }, name: \"Train Face Detector\", color: \"rgb(255,102,102)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'train', name: 'Train Object Detector' }, name: \"Train Object Detector\", color: \"rgb(15,255,255)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'eval', name: 'Evaluate mAP' }, name: \"Evaluate mAP\", color: \"rgb(255,204,204)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'runnb', name: 'Run Notebook' }, name: \"Run Notebook\", color: \"rgb(153,204,51)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'if', name: 'If' }, name: \"If\", color: \"rgb(255,153,0)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'math', name: 'Math Operation' }, name: \"Math Operation\", color: \"rgb(255,204,0)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'convert', name: 'Convert to Aurora' }, name: \"Convert to Aurora\", color: \"rgb(204,204,204)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'string', name: 'Get Hyper-parameter String Value' }, name: \"Get Hyper-parameter String Value\", color: \"rgb(153,204,204)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'int', name: 'Get Hyper-parameter Int Value' }, name: \"Get Hyper-parameter Int Value\", color: \"rgb(153,0,102)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'float', name: 'Get Hyper-parameter Float Value' }, name: \"Get Hyper-parameter Float Value\", color: \"rgb(102,51,102)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'model', name: 'Create Object Detector Model' }, name: \"Create Object Detector Model\", color: \"rgb(102,102,102)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'debug', name: 'Debug Image' }, name: \"Debug Image\", color: \"rgb(255,102,0)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'enough', name: 'Reached Target Accuracy' }, name: \"Reached Target Accuracy\", color: \"rgb(51,51,51)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'literal', name: 'Literal True' }, name: \"Literal True\", color: \"rgb(21,21,51)\" }),\r\n                    React.createElement(TrayItemWidget, { model: { type: 'literal', name: 'Literal False' }, name: \"Literal False\", color: \"rgb(21,21,51)\" })))));\r\n    }\r\n}\r\n/**\r\n * Initialization data for the xpipe_component_library extension.\r\n */\r\nconst xpipe_component_library = {\r\n    id: 'xpipe_component_library:plugin',\r\n    autoStart: true,\r\n    requires: [ILabShell, ILayoutRestorer],\r\n    activate: (app, labShell, restorer) => {\r\n        console.log('JupyterLab extension xpipe_component_library is activated!');\r\n        const widget = new BodyWidget();\r\n        widget.id = 'xai-jupyterlab-component-library';\r\n        restorer.add(widget, widget.id);\r\n        labShell.add(widget, \"left\", { rank: 1000 });\r\n    }\r\n};\r\nexport default xpipe_component_library;\r\n"],"names":[],"sourceRoot":""}